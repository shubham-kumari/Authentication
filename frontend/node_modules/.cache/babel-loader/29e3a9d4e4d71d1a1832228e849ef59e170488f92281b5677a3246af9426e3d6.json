{"ast":null,"code":"var _jsxFileName = \"/Users/shubhamkumari/Downloads/01-starting-project/frontend/src/pages/Authentication.js\";\nimport { json, redirect } from 'react-router-dom';\nimport AuthForm from '../components/AuthForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthenticationPage() {\n  return /*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n}\n_c = AuthenticationPage;\nexport default AuthenticationPage;\nexport async function action({\n  request\n}) {\n  const searchParams = new URL(request.url).searchParams;\n  const mode = searchParams.get('mode') || 'login';\n\n  // Validate mode\n  if (mode !== 'login' && mode !== 'signup') {\n    throw json({\n      message: 'Unsupported mode'\n    }, {\n      status: 422\n    });\n  }\n\n  // Retrieve form data\n  const data = await request.formData();\n  const authData = {\n    email: data.get('email'),\n    password: data.get('password')\n  };\n  try {\n    // Perform the API request\n    const response = await fetch(`http://localhost:8080/${mode}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(authData)\n    });\n\n    // Handle specific error responses\n    if (response.status === 422 || response.status === 401) {\n      return response; // Pass the response back for client-side handling\n    }\n\n    // Handle general errors\n    if (!response.ok) {\n      throw json({\n        message: 'Could not authenticate user.'\n      }, {\n        status: 500\n      });\n    }\n\n    // Redirect on success\n    return redirect('/');\n  } catch (error) {\n    // Catch unexpected issues\n    throw json({\n      message: 'Authentication failed. Please try again.'\n    }, {\n      status: 500\n    });\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"AuthenticationPage\");","map":{"version":3,"names":["json","redirect","AuthForm","jsxDEV","_jsxDEV","AuthenticationPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","searchParams","URL","url","mode","get","message","status","data","formData","authData","email","password","response","fetch","method","headers","body","JSON","stringify","ok","error","$RefreshReg$"],"sources":["/Users/shubhamkumari/Downloads/01-starting-project/frontend/src/pages/Authentication.js"],"sourcesContent":["import { json, redirect } from 'react-router-dom';\nimport AuthForm from '../components/AuthForm';\n\nfunction AuthenticationPage() {\n  return <AuthForm />;\n}\n\nexport default AuthenticationPage;\n\nexport async function action({ request }) {\n  const searchParams = new URL(request.url).searchParams;\n  const mode = searchParams.get('mode') || 'login';\n\n  // Validate mode\n  if (mode !== 'login' && mode !== 'signup') {\n    throw json({ message: 'Unsupported mode' }, { status: 422 });\n  }\n\n  // Retrieve form data\n  const data = await request.formData();\n  const authData = {\n    email: data.get('email'),\n    password: data.get('password'),\n  };\n\n  try {\n    // Perform the API request\n    const response = await fetch(`http://localhost:8080/${mode}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(authData),\n    });\n\n    // Handle specific error responses\n    if (response.status === 422 || response.status === 401) {\n      return response; // Pass the response back for client-side handling\n    }\n\n    // Handle general errors\n    if (!response.ok) {\n      throw json({ message: 'Could not authenticate user.' }, { status: 500 });\n    }\n\n    // Redirect on success\n    return redirect('/');\n  } catch (error) {\n    // Catch unexpected issues\n    throw json({ message: 'Authentication failed. Please try again.' }, { status: 500 });\n  }\n}\n"],"mappings":";AAAA,SAASA,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AACjD,OAAOC,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,kBAAkBA,CAAA,EAAG;EAC5B,oBAAOD,OAAA,CAACF,QAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrB;AAACC,EAAA,GAFQL,kBAAkB;AAI3B,eAAeA,kBAAkB;AAEjC,OAAO,eAAeM,MAAMA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EACxC,MAAMC,YAAY,GAAG,IAAIC,GAAG,CAACF,OAAO,CAACG,GAAG,CAAC,CAACF,YAAY;EACtD,MAAMG,IAAI,GAAGH,YAAY,CAACI,GAAG,CAAC,MAAM,CAAC,IAAI,OAAO;;EAEhD;EACA,IAAID,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,QAAQ,EAAE;IACzC,MAAMhB,IAAI,CAAC;MAAEkB,OAAO,EAAE;IAAmB,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EAC9D;;EAEA;EACA,MAAMC,IAAI,GAAG,MAAMR,OAAO,CAACS,QAAQ,CAAC,CAAC;EACrC,MAAMC,QAAQ,GAAG;IACfC,KAAK,EAAEH,IAAI,CAACH,GAAG,CAAC,OAAO,CAAC;IACxBO,QAAQ,EAAEJ,IAAI,CAACH,GAAG,CAAC,UAAU;EAC/B,CAAC;EAED,IAAI;IACF;IACA,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,yBAAyBV,IAAI,EAAE,EAAE;MAC5DW,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,QAAQ;IAC/B,CAAC,CAAC;;IAEF;IACA,IAAIG,QAAQ,CAACN,MAAM,KAAK,GAAG,IAAIM,QAAQ,CAACN,MAAM,KAAK,GAAG,EAAE;MACtD,OAAOM,QAAQ,CAAC,CAAC;IACnB;;IAEA;IACA,IAAI,CAACA,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAMhC,IAAI,CAAC;QAAEkB,OAAO,EAAE;MAA+B,CAAC,EAAE;QAAEC,MAAM,EAAE;MAAI,CAAC,CAAC;IAC1E;;IAEA;IACA,OAAOlB,QAAQ,CAAC,GAAG,CAAC;EACtB,CAAC,CAAC,OAAOgC,KAAK,EAAE;IACd;IACA,MAAMjC,IAAI,CAAC;MAAEkB,OAAO,EAAE;IAA2C,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACtF;AACF;AAAC,IAAAT,EAAA;AAAAwB,YAAA,CAAAxB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}